{
  "stats": {
    "suites": 1,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-18T19:10:48.939Z",
    "end": "2025-10-18T19:11:41.594Z",
    "duration": 52655,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "32116937-e2b2-4917-ad44-e1014922d449",
      "title": "",
      "fullFile": "cypress\\e2e\\registration-form-test.cy.js",
      "file": "cypress\\e2e\\registration-form-test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
          "title": "Registration and Login tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration user",
              "fullTitle": "Registration and Login tests Registration user",
              "timedOut": null,
              "duration": 4125,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.get('.header_right > .btn').click();\ncy.contains('.modal-header', 'Log in');\ncy.contains('button', 'Registration').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password, {\n  sensitive: true\n}).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password, {\n  sensitive: true\n}).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\nemail = userData.email;\npassword = userData.password;\ncy.contains('button', 'Register').click();",
              "err": {},
              "uuid": "29485738-c7ef-4786-9973-5d4b68372853",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login user",
              "fullTitle": "Registration and Login tests Login user",
              "timedOut": null,
              "duration": 3065,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.get('.header_right > .btn').click();\ncy.contains('.modal-header', 'Log in');\ncy.get('#signinEmail').clear().type(email).should('have.value', email);\ncy.get('#signinPassword').clear().type(password).invoke('val').then(val => {\n  expect(val).to.eq(password);\n});\ncy.contains('button', 'Login').click();\ncy.url().should('include', '/garage');\ncy.get('.alert.alert-success').should('be.visible').and('contain.text', 'You have been successfully logged in');\ncy.get('#userNavDropdown').click();\ncy.get('.user-nav_menu .dropdown-item').contains('Logout').click();",
              "err": {},
              "uuid": "31d5d40d-ed80-4540-b535-33f8181c8228",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Name\" Empty field - \"Name is required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Name\" Empty field - \"Name is required\"",
              "timedOut": null,
              "duration": 3025,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().focus().blur();\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Name required').should('be.visible');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "303512eb-4c06-4fba-93bc-6e62e0c8f10f",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Name\" Wrong data - \"Name is invalid\"",
              "fullTitle": "Registration and Login tests Checking validation \"Name\" Wrong data - \"Name is invalid\"",
              "timedOut": null,
              "duration": 3324,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type('!233').should('have.value', '!233');\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Name is invalid').should('be.visible');\ncy.get('#signupName').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "9e8fc50c-de3c-41f3-be5b-09848b6555f3",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should accept a valid name",
              "fullTitle": "Registration and Login tests Should accept a valid name",
              "timedOut": null,
              "duration": 3641,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').should('not.exist');\ncy.get('#signupName').should('not.have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('not.be.disabled');",
              "err": {},
              "uuid": "c0824f30-3c68-4cbc-839a-18e73050e70a",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Lats Name\" Wrong length - \"Last name has to be from 2 to 20 characters long\"",
              "fullTitle": "Registration and Login tests Checking validation \"Lats Name\" Wrong length - \"Last name has to be from 2 to 20 characters long\"",
              "timedOut": null,
              "duration": 3538,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type('AlexanderTheGreatHero').should('have.value', 'AlexanderTheGreatHero');\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Last name has to be from 2 to 20 characters long').should('be.visible');\ncy.get('[name=\"lastName\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "8089c825-ff61-4ba8-b50b-f81452b6ee8b",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Lats Name\" Wrong data - \"Last name is invalid\"",
              "fullTitle": "Registration and Login tests Checking validation \"Lats Name\" Wrong data - \"Last name is invalid\"",
              "timedOut": null,
              "duration": 3433,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type('Dora-cal').should('have.value', 'Dora-cal');\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Last name is invalid').should('be.visible');\ncy.get('[name=\"lastName\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "793b3dfc-9ea1-414e-92ff-4eae8bea4f3b",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should accept a valid last name",
              "fullTitle": "Registration and Login tests Should accept a valid last name",
              "timedOut": null,
              "duration": 3476,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').should('not.exist');\ncy.get('[name=\"lastName\"]').should('not.have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('not.be.disabled');",
              "err": {},
              "uuid": "0272ce1f-5a88-4148-9a90-e220d68f5f24",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Email\" For empty field - \"Email required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Email\" For empty field - \"Email required\"",
              "timedOut": null,
              "duration": 2914,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').focus().clear();\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Email required').should('be.visible');\ncy.get('[formcontrolname=\"email\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "16a2563d-a2c9-4433-9d0c-a7e2199bc269",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Email\" Wrong data - \"Email is incorrect\"",
              "fullTitle": "Registration and Login tests Checking validation \"Email\" Wrong data - \"Email is incorrect\"",
              "timedOut": null,
              "duration": 3295,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type('123mail.com').should('have.value', '123mail.com');\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Email is incorrect').should('be.visible');\ncy.get('[formcontrolname=\"email\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "63842ae7-af00-4078-b257-3dff31d15470",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should accept a valid Email",
              "fullTitle": "Registration and Login tests Should accept a valid Email",
              "timedOut": null,
              "duration": 3431,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').should('not.exist');\ncy.get('[formcontrolname=\"email\"]').should('not.have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('not.be.disabled');",
              "err": {},
              "uuid": "3ecb103e-4cab-4626-adc7-9b00f2a6525d",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Password \" For empty field error - \"Password required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Password \" For empty field error - \"Password required\"",
              "timedOut": null,
              "duration": 3254,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').focus().clear();\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Password required').should('be.visible');\ncy.get('#signupPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "477fd78a-27ca-4c79-8e2b-becb3839c285",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Password \" Wrong data - \"Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter\"",
              "fullTitle": "Registration and Login tests Checking validation \"Password \" Wrong data - \"Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter\"",
              "timedOut": null,
              "duration": 3356,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type('Qwerqwerqwerqwerqwer').should('have.value', 'Qwerqwerqwerqwerqwer');\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter').should('be.visible');\ncy.get('#signupPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "43351ad0-7c6c-4913-919d-332f6359ea5d",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Re-enter password\" For empty field error - \"Re-enter password required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Re-enter password\" For empty field error - \"Re-enter password required\"",
              "timedOut": null,
              "duration": 3390,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).should('have.value', userData.password);\ncy.get('#signupRepeatPassword').focus().clear().blur();\ncy.get('.invalid-feedback').contains('Re-enter password required').should('be.visible');\ncy.get('#signupRepeatPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "0c186167-cf35-45fe-b37a-55d9cfc245f7",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Re-enter password\" Passwords do not match.\"",
              "fullTitle": "Registration and Login tests Checking validation \"Re-enter password\" Passwords do not match.\"",
              "timedOut": null,
              "duration": 3571,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type('QWEr1235!').blur();\ncy.get('#signupRepeatPassword').invoke('val').then(val => {\n  expect(val).to.eq('QWEr1235!');\n});\ncy.contains('button', 'Register').should('be.disabled');\ncy.get('.invalid-feedback').contains('Passwords do not match').should('be.visible');\ncy.get('#signupRepeatPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');",
              "err": {},
              "uuid": "a33dc4bb-edbc-4e7a-8a00-ea9d971d633f",
              "parentUUID": "f11901b0-85a1-4dd1-ade1-ae561c3069df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29485738-c7ef-4786-9973-5d4b68372853",
            "31d5d40d-ed80-4540-b535-33f8181c8228",
            "303512eb-4c06-4fba-93bc-6e62e0c8f10f",
            "9e8fc50c-de3c-41f3-be5b-09848b6555f3",
            "c0824f30-3c68-4cbc-839a-18e73050e70a",
            "8089c825-ff61-4ba8-b50b-f81452b6ee8b",
            "793b3dfc-9ea1-414e-92ff-4eae8bea4f3b",
            "0272ce1f-5a88-4148-9a90-e220d68f5f24",
            "16a2563d-a2c9-4433-9d0c-a7e2199bc269",
            "63842ae7-af00-4078-b257-3dff31d15470",
            "3ecb103e-4cab-4626-adc7-9b00f2a6525d",
            "477fd78a-27ca-4c79-8e2b-becb3839c285",
            "43351ad0-7c6c-4913-919d-332f6359ea5d",
            "0c186167-cf35-45fe-b37a-55d9cfc245f7",
            "a33dc4bb-edbc-4e7a-8a00-ea9d971d633f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 50838,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}
