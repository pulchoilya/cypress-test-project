{
  "stats": {
    "suites": 1,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-17T21:08:16.967Z",
    "end": "2025-10-17T21:08:59.965Z",
    "duration": 42998,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6400c87c-7175-4fc4-ae9a-b0e0189155e4",
      "title": "",
      "fullFile": "cypress\\e2e\\registration-form-test.cy.js",
      "file": "cypress\\e2e\\registration-form-test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
          "title": "Registration and Login tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration user",
              "fullTitle": "Registration and Login tests Registration user",
              "timedOut": null,
              "duration": 3678,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.get('.header_right > .btn').click();\ncy.contains('.modal-header', 'Log in');\ncy.contains('button', 'Registration').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password, {\n  sensitive: true\n}).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password, {\n  sensitive: true\n}).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\nemail = userData.email;\npassword = userData.password;\ncy.contains('button', 'Register').click();",
              "err": {},
              "uuid": "a71367e2-6135-4543-99a1-1c12f0995847",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login user",
              "fullTitle": "Registration and Login tests Login user",
              "timedOut": null,
              "duration": 2463,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.get('.header_right > .btn').click();\ncy.contains('.modal-header', 'Log in');\ncy.get('#signinEmail').clear().type(email).should('have.value', email);\ncy.get('#signinPassword').clear().type(password).invoke('val').then(val => {\n  expect(val).to.eq(password);\n});\ncy.contains('button', 'Login').click();\ncy.url().should('include', '/garage');\ncy.get('.alert.alert-success').should('be.visible').and('contain.text', 'You have been successfully logged in');\ncy.get('#userNavDropdown').click();\ncy.get('.user-nav_menu .dropdown-item').contains('Logout').click();",
              "err": {},
              "uuid": "e7a8a44a-b6d4-4f88-9bc1-0ea36bd8578e",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Name\" Empty field - \"Name is required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Name\" Empty field - \"Name is required\"",
              "timedOut": null,
              "duration": 2611,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().focus().blur();\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Name required').should('be.visible');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "714651fa-148f-4639-b1f4-2a5c850d1ed6",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Name\" Wrong data - \"Name is invalid\"",
              "fullTitle": "Registration and Login tests Checking validation \"Name\" Wrong data - \"Name is invalid\"",
              "timedOut": null,
              "duration": 2719,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type('!233').should('have.value', '!233');\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Name is invalid').should('be.visible');\ncy.get('#signupName').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "06a2f6b2-7789-4258-8540-1e0755949a5d",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should accept a valid name",
              "fullTitle": "Registration and Login tests Should accept a valid name",
              "timedOut": null,
              "duration": 2656,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').should('not.exist');\ncy.get('#signupName').should('not.have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('not.be.disabled');",
              "err": {},
              "uuid": "eb02f946-3b26-479e-9efa-09ec1c5d0c08",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Lats Name\" Wrong length - \"Last name has to be from 2 to 20 characters long\"",
              "fullTitle": "Registration and Login tests Checking validation \"Lats Name\" Wrong length - \"Last name has to be from 2 to 20 characters long\"",
              "timedOut": null,
              "duration": 2911,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type('AlexanderTheGreatHero').should('have.value', 'AlexanderTheGreatHero');\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Last name has to be from 2 to 20 characters long').should('be.visible');\ncy.get('[name=\"lastName\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "0bbc2e4c-9296-4304-8ea2-0e25c758a44a",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Lats Name\" Wrong data - \"Last name is invalid\"",
              "fullTitle": "Registration and Login tests Checking validation \"Lats Name\" Wrong data - \"Last name is invalid\"",
              "timedOut": null,
              "duration": 2739,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type('Dora-cal').should('have.value', 'Dora-cal');\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Last name is invalid').should('be.visible');\ncy.get('[name=\"lastName\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "86f37d44-35a1-4a5c-957f-50f131e89787",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should accept a valid last name",
              "fullTitle": "Registration and Login tests Should accept a valid last name",
              "timedOut": null,
              "duration": 3103,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').should('not.exist');\ncy.get('[name=\"lastName\"]').should('not.have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('not.be.disabled');",
              "err": {},
              "uuid": "6816b0ca-d055-4c7a-b214-f7292ced3d1e",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Email\" For empty field - \"Email required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Email\" For empty field - \"Email required\"",
              "timedOut": null,
              "duration": 2452,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').focus().clear();\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Email required').should('be.visible');\ncy.get('[formcontrolname=\"email\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "7e5a806a-a164-4b6f-b76d-21efab2d160f",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Email\" Wrong data - \"Email is incorrect\"",
              "fullTitle": "Registration and Login tests Checking validation \"Email\" Wrong data - \"Email is incorrect\"",
              "timedOut": null,
              "duration": 2752,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type('123mail.com').should('have.value', '123mail.com');\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Email is incorrect').should('be.visible');\ncy.get('[formcontrolname=\"email\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "5a76d69d-4d32-4c6f-a177-38f67c7d2a64",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should accept a valid Email",
              "fullTitle": "Registration and Login tests Should accept a valid Email",
              "timedOut": null,
              "duration": 2946,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').should('not.exist');\ncy.get('[formcontrolname=\"email\"]').should('not.have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('not.be.disabled');",
              "err": {},
              "uuid": "a4074b2d-6358-424f-811d-5870583fa3ef",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Password \" For empty field error - \"Password required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Password \" For empty field error - \"Password required\"",
              "timedOut": null,
              "duration": 2357,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').focus().clear();\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Password required').should('be.visible');\ncy.get('#signupPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "d2c18f77-a5f5-49e8-b8aa-fc2fb05cddd2",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Password \" Wrong data - \"Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter\"",
              "fullTitle": "Registration and Login tests Checking validation \"Password \" Wrong data - \"Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter\"",
              "timedOut": null,
              "duration": 2954,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type('Qwerqwerqwerqwerqwer').should('have.value', 'Qwerqwerqwerqwerqwer');\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter').should('be.visible');\ncy.get('#signupPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "1851ea1b-2d25-4f28-a703-f759915a1ba3",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Re-enter password\" For empty field error - \"Re-enter password required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Re-enter password\" For empty field error - \"Re-enter password required\"",
              "timedOut": null,
              "duration": 2574,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).should('have.value', userData.password);\ncy.get('#signupRepeatPassword').focus().clear().blur();\ncy.get('.invalid-feedback').contains('Re-enter password required').should('be.visible');\ncy.get('#signupRepeatPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "28dad59d-7c24-4ae3-92d2-e1dd4d380f0c",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Re-enter password\" Passwords do not match.\"",
              "fullTitle": "Registration and Login tests Checking validation \"Re-enter password\" Passwords do not match.\"",
              "timedOut": null,
              "duration": 2903,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type('QWEr1235!').blur();\ncy.get('#signupRepeatPassword').invoke('val').then(val => {\n  expect(val).to.eq('QWEr1235!');\n});\ncy.contains('button', 'Register').should('be.disabled');\ncy.get('.invalid-feedback').contains('Passwords do not match').should('be.visible');\ncy.get('#signupRepeatPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');",
              "err": {},
              "uuid": "e685d73d-d8b2-4005-a5c7-50f7bc5f641a",
              "parentUUID": "88b508f0-2b8a-4194-bbf0-50de944c2a5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a71367e2-6135-4543-99a1-1c12f0995847",
            "e7a8a44a-b6d4-4f88-9bc1-0ea36bd8578e",
            "714651fa-148f-4639-b1f4-2a5c850d1ed6",
            "06a2f6b2-7789-4258-8540-1e0755949a5d",
            "eb02f946-3b26-479e-9efa-09ec1c5d0c08",
            "0bbc2e4c-9296-4304-8ea2-0e25c758a44a",
            "86f37d44-35a1-4a5c-957f-50f131e89787",
            "6816b0ca-d055-4c7a-b214-f7292ced3d1e",
            "7e5a806a-a164-4b6f-b76d-21efab2d160f",
            "5a76d69d-4d32-4c6f-a177-38f67c7d2a64",
            "a4074b2d-6358-424f-811d-5870583fa3ef",
            "d2c18f77-a5f5-49e8-b8aa-fc2fb05cddd2",
            "1851ea1b-2d25-4f28-a703-f759915a1ba3",
            "28dad59d-7c24-4ae3-92d2-e1dd4d380f0c",
            "e685d73d-d8b2-4005-a5c7-50f7bc5f641a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 41818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}
