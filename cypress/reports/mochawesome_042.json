{
  "stats": {
    "suites": 1,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-18T19:16:14.171Z",
    "end": "2025-10-18T19:17:04.604Z",
    "duration": 50433,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d0bbae4f-7f1f-4bf8-b260-b676ffe4ef59",
      "title": "",
      "fullFile": "cypress\\e2e\\registration-form-test.cy.js",
      "file": "cypress\\e2e\\registration-form-test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
          "title": "Registration and Login tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration user",
              "fullTitle": "Registration and Login tests Registration user",
              "timedOut": null,
              "duration": 4136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.get('.header_right > .btn').click();\ncy.contains('.modal-header', 'Log in');\ncy.contains('button', 'Registration').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password, {\n  sensitive: true\n}).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password, {\n  sensitive: true\n}).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\nemail = userData.email;\npassword = userData.password;\ncy.contains('button', 'Register').click();",
              "err": {},
              "uuid": "f7615416-297c-4e81-881d-f2b3118d4d13",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login user",
              "fullTitle": "Registration and Login tests Login user",
              "timedOut": null,
              "duration": 2626,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.get('.header_right > .btn').click();\ncy.contains('.modal-header', 'Log in');\ncy.get('#signinEmail').clear().type(email).should('have.value', email);\ncy.get('#signinPassword').clear().type(password).invoke('val').then(val => {\n  expect(val).to.eq(password);\n});\ncy.contains('button', 'Login').click();\ncy.url().should('include', '/garage');\ncy.get('.alert.alert-success').should('be.visible').and('contain.text', 'You have been successfully logged in');\ncy.get('#userNavDropdown').click();\ncy.get('.user-nav_menu .dropdown-item').contains('Logout').click();",
              "err": {},
              "uuid": "d4521673-6fb6-478c-bce6-da50a8427ffa",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Name\" Empty field - \"Name is required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Name\" Empty field - \"Name is required\"",
              "timedOut": null,
              "duration": 2755,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().focus().blur();\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Name required').should('be.visible');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "fb0aef66-6693-402d-a6b9-d0e13735358b",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Name\" Wrong data - \"Name is invalid\"",
              "fullTitle": "Registration and Login tests Checking validation \"Name\" Wrong data - \"Name is invalid\"",
              "timedOut": null,
              "duration": 3032,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type('!233').should('have.value', '!233');\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Name is invalid').should('be.visible');\ncy.get('#signupName').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "76d809c4-f3ec-4a85-b6d3-e0e6ebbf97cb",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should accept a valid name",
              "fullTitle": "Registration and Login tests Should accept a valid name",
              "timedOut": null,
              "duration": 2900,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').should('not.exist');\ncy.get('#signupName').should('not.have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('not.be.disabled');",
              "err": {},
              "uuid": "f7393aa7-e385-46df-86c6-069cde5d1d85",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Lats Name\" Wrong length - \"Last name has to be from 2 to 20 characters long\"",
              "fullTitle": "Registration and Login tests Checking validation \"Lats Name\" Wrong length - \"Last name has to be from 2 to 20 characters long\"",
              "timedOut": null,
              "duration": 3752,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type('AlexanderTheGreatHero').should('have.value', 'AlexanderTheGreatHero');\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Last name has to be from 2 to 20 characters long').should('be.visible');\ncy.get('[name=\"lastName\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "8fc2a39d-8e7b-43d2-8601-747a2e4bc991",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Lats Name\" Wrong data - \"Last name is invalid\"",
              "fullTitle": "Registration and Login tests Checking validation \"Lats Name\" Wrong data - \"Last name is invalid\"",
              "timedOut": null,
              "duration": 3526,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type('Dora-cal').should('have.value', 'Dora-cal');\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Last name is invalid').should('be.visible');\ncy.get('[name=\"lastName\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "648cd261-153b-49e9-9922-dcd3c6ef9940",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should accept a valid last name",
              "fullTitle": "Registration and Login tests Should accept a valid last name",
              "timedOut": null,
              "duration": 3911,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').should('not.exist');\ncy.get('[name=\"lastName\"]').should('not.have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('not.be.disabled');",
              "err": {},
              "uuid": "892dd8dc-439c-4eff-a094-ed6deee8f6ac",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Email\" For empty field - \"Email required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Email\" For empty field - \"Email required\"",
              "timedOut": null,
              "duration": 2742,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').focus().clear();\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Email required').should('be.visible');\ncy.get('[formcontrolname=\"email\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "6ed0a58f-64eb-4531-ac26-2cd5e8f32a21",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Email\" Wrong data - \"Email is incorrect\"",
              "fullTitle": "Registration and Login tests Checking validation \"Email\" Wrong data - \"Email is incorrect\"",
              "timedOut": null,
              "duration": 3120,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type('123mail.com').should('have.value', '123mail.com');\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Email is incorrect').should('be.visible');\ncy.get('[formcontrolname=\"email\"]').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "d6e456e0-59c4-4a9d-92b3-44ee46d423df",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should accept a valid Email",
              "fullTitle": "Registration and Login tests Should accept a valid Email",
              "timedOut": null,
              "duration": 3668,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').clear().type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').should('not.exist');\ncy.get('[formcontrolname=\"email\"]').should('not.have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('not.be.disabled');",
              "err": {},
              "uuid": "ab70499c-181b-4b8c-9462-77d989dc97c4",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Password \" For empty field error - \"Password required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Password \" For empty field error - \"Password required\"",
              "timedOut": null,
              "duration": 3082,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').focus().clear();\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Password required').should('be.visible');\ncy.get('#signupPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "a08690d3-188b-42f4-846f-5f0e3474efc0",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Password \" Wrong data - \"Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter\"",
              "fullTitle": "Registration and Login tests Checking validation \"Password \" Wrong data - \"Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter\"",
              "timedOut": null,
              "duration": 3532,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type('Qwerqwerqwerqwerqwer').should('have.value', 'Qwerqwerqwerqwerqwer');\ncy.get('#signupRepeatPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('.invalid-feedback').contains('Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter').should('be.visible');\ncy.get('#signupPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "51a8816f-6af0-4bb0-9668-21e4ad456179",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Re-enter password\" For empty field error - \"Re-enter password required\"",
              "fullTitle": "Registration and Login tests Checking validation \"Re-enter password\" For empty field error - \"Re-enter password required\"",
              "timedOut": null,
              "duration": 3070,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).should('have.value', userData.password);\ncy.get('#signupRepeatPassword').focus().clear().blur();\ncy.get('.invalid-feedback').contains('Re-enter password required').should('be.visible');\ncy.get('#signupRepeatPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');\ncy.contains('button', 'Register').should('be.disabled');",
              "err": {},
              "uuid": "5e09c359-1b07-4c74-8da6-b303a9b24993",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking validation \"Re-enter password\" Passwords do not match.\"",
              "fullTitle": "Registration and Login tests Checking validation \"Re-enter password\" Passwords do not match.\"",
              "timedOut": null,
              "duration": 2966,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'qauto.forstudy.space');\ncy.contains('button', 'Sign up').click();\ncy.contains('.modal-header', 'Registration');\ncy.get('#signupName').type(userData.firstName).should('have.value', userData.firstName);\ncy.get('[name=\"lastName\"]').clear().type(userData.lastName).should('have.value', userData.lastName);\ncy.get('[formcontrolname=\"email\"]').clear().type(userData.email).should('have.value', userData.email);\ncy.get('#signupPassword').clear().type(userData.password).invoke('val').then(val => {\n  expect(val).to.eq(userData.password);\n});\ncy.get('#signupRepeatPassword').clear().type('QWEr1235!').blur();\ncy.get('#signupRepeatPassword').invoke('val').then(val => {\n  expect(val).to.eq('QWEr1235!');\n});\ncy.contains('button', 'Register').should('be.disabled');\ncy.get('.invalid-feedback').contains('Passwords do not match').should('be.visible');\ncy.get('#signupRepeatPassword').should('have.css', 'border-color', 'rgb(220, 53, 69)');",
              "err": {},
              "uuid": "cd25f505-4234-487c-9133-5df1f19c15c8",
              "parentUUID": "076b7dbd-15f5-4189-9a97-4d754eaae0c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7615416-297c-4e81-881d-f2b3118d4d13",
            "d4521673-6fb6-478c-bce6-da50a8427ffa",
            "fb0aef66-6693-402d-a6b9-d0e13735358b",
            "76d809c4-f3ec-4a85-b6d3-e0e6ebbf97cb",
            "f7393aa7-e385-46df-86c6-069cde5d1d85",
            "8fc2a39d-8e7b-43d2-8601-747a2e4bc991",
            "648cd261-153b-49e9-9922-dcd3c6ef9940",
            "892dd8dc-439c-4eff-a094-ed6deee8f6ac",
            "6ed0a58f-64eb-4531-ac26-2cd5e8f32a21",
            "d6e456e0-59c4-4a9d-92b3-44ee46d423df",
            "ab70499c-181b-4b8c-9462-77d989dc97c4",
            "a08690d3-188b-42f4-846f-5f0e3474efc0",
            "51a8816f-6af0-4bb0-9668-21e4ad456179",
            "5e09c359-1b07-4c74-8da6-b303a9b24993",
            "cd25f505-4234-487c-9133-5df1f19c15c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 48818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}
