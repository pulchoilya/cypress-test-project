{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-18T19:01:21.679Z",
    "end": "2025-10-18T19:01:48.625Z",
    "duration": 26946,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "43b7135e-b253-4298-8185-ebe7f4b6892f",
      "title": "",
      "fullFile": "cypress\\e2e\\qauto-ls-21.cy.js",
      "file": "cypress\\e2e\\qauto-ls-21.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "78839685-2e00-4b83-9929-06285ca36cd8",
          "title": "Registration and Login tests for QAuto1",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration user - Element-oriented POM",
              "fullTitle": "Registration and Login tests for QAuto1 Registration user - Element-oriented POM",
              "timedOut": null,
              "duration": 3913,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "registrationPage.openRegistrationModal();\nregistrationPage.firstNameInput.clear().type(userData1.firstName).should('have.value', userData1.firstName);\nregistrationPage.lastNameInput.clear().type(userData1.lastName).should('have.value', userData1.lastName);\nregistrationPage.emailInput.clear().type(userData1.email).should('have.value', userData1.email);\nregistrationPage.passwordInput.clear().type(userData1.password, {\n  sensitive: true\n});\nregistrationPage.repeatPasswordInput.clear().type(userData1.password, {\n  sensitive: true\n});\nregistrationPage.registerButton.click();",
              "err": {},
              "uuid": "db6a10cf-2bc9-43e5-a513-313aa78ce75e",
              "parentUUID": "78839685-2e00-4b83-9929-06285ca36cd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login user - Element-oriented POM",
              "fullTitle": "Registration and Login tests for QAuto1 Login user - Element-oriented POM",
              "timedOut": null,
              "duration": 3086,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "signIn.openLogInModal();\nsignIn.emailInput.clear().type(email).should('have.value', email);\nsignIn.passwordInput.clear().type(password).invoke('val').then(val => expect(val).to.eq(password));\nsignIn.submitLoginButton.click();\nsignIn.alert.should('be.visible').and('contain.text', 'You have been successfully logged in');\nsignIn.garageUrl;\nsignIn.profileDropdown.click();\nsignIn.logoutOption.click();",
              "err": {},
              "uuid": "550cfc0f-26ee-479b-98ef-5ee0d2a89588",
              "parentUUID": "78839685-2e00-4b83-9929-06285ca36cd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add car and fuel - Element-oriented POM",
              "fullTitle": "Registration and Login tests for QAuto1 Add car and fuel - Element-oriented POM",
              "timedOut": null,
              "duration": 5679,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "signIn.openLogInModal();\nsignIn.emailInput.clear().type(email).should('have.value', email);\nsignIn.passwordInput.clear().type(password).invoke('val').then(val => expect(val).to.eq(password));\nsignIn.submitLoginButton.click();\naddCar.garageUrl;\naddCar.addCarButton.click();\naddCar.header.should('have.text', 'Add a car');\naddCar.addCarBrand.select('BMW').should('have.value', '1: 2');\naddCar.addCarModel.select('X5').should('have.value', '7: 8');\naddCar.addCarMileage.type('5500').should('have.value', '5500');\naddCar.addButton.click();\naddCar.checkAddedCar.should('have.text', 'BMW X5');\naddCar.addFuelButton.click();\naddCar.fuelHeader.should('have.text', 'Add an expense');\naddCar.expenseCar.find('option:selected').should('have.text', 'BMW X5');\naddCar.expenseDate.clear().type(addCar.getTodayDate()).should('have.value', addCar.getTodayDate());\naddCar.expenseMileage.clear().type('20000').should('have.value', '20000');\naddCar.expenseLiters.clear().type('80').should('have.value', '80');\naddCar.expenseTotalCost.clear().type('9000').should('have.value', '9000');\naddCar.submitFuelButton.contains('Add').click();",
              "err": {},
              "uuid": "e84664b6-fa2d-4036-8ada-4aa7bbc93616",
              "parentUUID": "78839685-2e00-4b83-9929-06285ca36cd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db6a10cf-2bc9-43e5-a513-313aa78ce75e",
            "550cfc0f-26ee-479b-98ef-5ee0d2a89588",
            "e84664b6-fa2d-4036-8ada-4aa7bbc93616"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12678,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "56b4642a-f5f0-4d30-a08a-39c8c07ec170",
          "title": "Registration and Login tests for QAuto2",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration user2 - Methodological POM",
              "fullTitle": "Registration and Login tests for QAuto2 Registration user2 - Methodological POM",
              "timedOut": null,
              "duration": 3561,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RegistrationPage2.openRegistrationModal().typeFirstName(userData2.firstName).typeLastName(userData2.lastName).typeEmail(userData2.email).typePassword(userData2.password).clickRegisterButton();",
              "err": {},
              "uuid": "f7cde05e-8d1c-41eb-9c10-3e8027e7f7cc",
              "parentUUID": "56b4642a-f5f0-4d30-a08a-39c8c07ec170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login user2 - Methodological POM",
              "fullTitle": "Registration and Login tests for QAuto2 Login user2 - Methodological POM",
              "timedOut": null,
              "duration": 2847,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "signInMethodological.openLoginModalMeth().typeEmail(userData2.email).typePassword(userData2.password).clickLogIn().verifyAlert('You have been successfully logged in').clickProfileDropdown().clickLogout();",
              "err": {},
              "uuid": "53c0a100-2f5f-4e7a-9b36-cb07ba22a483",
              "parentUUID": "56b4642a-f5f0-4d30-a08a-39c8c07ec170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add car and fuel - Methodological POM",
              "fullTitle": "Registration and Login tests for QAuto2 Add car and fuel - Methodological POM",
              "timedOut": null,
              "duration": 5087,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "signInMethodological.openLoginModalMeth().typeEmail(userData2.email).typePassword(userData2.password).clickLogIn();\naddCarMeth.verifyGarageUrl().openAddCarModal().fillCarForm('BMW', 'X5', '5500').submitAddCar().openAddFuelModal().fillFuelForm('20000', '80', '9000').submitAddFuel();",
              "err": {},
              "uuid": "a929ae36-9c5c-4683-b797-e7e0c5c2c3a7",
              "parentUUID": "56b4642a-f5f0-4d30-a08a-39c8c07ec170",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7cde05e-8d1c-41eb-9c10-3e8027e7f7cc",
            "53c0a100-2f5f-4e7a-9b36-cb07ba22a483",
            "a929ae36-9c5c-4683-b797-e7e0c5c2c3a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11495,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}
